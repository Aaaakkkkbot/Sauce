<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>This bot provides you with an interface to use &lt;a href="https://saucenao.com/"&gt;SauceNAO&lt;/a&gt;'s reverse image search engine.
Send me an image (image, GIF or a sticker) and I'll try to reverse search using the SauceNAO API.
If you have an saucenao account, then you can use your own &lt;b&gt;ApiKey&lt;/b&gt; to make your sauces. Use &lt;i&gt;/help apikey&lt;/i&gt; to get more information.</value>
  </data>
  <data name="Anticheats" xml:space="preserve">
    <value>Use this feature to block the sauce of photos sent by bots in your group chats. To enable/disable Anticheats use /anticheats on|off</value>
  </data>
  <data name="AnticheatsAdded" xml:space="preserve">
    <value>The bot {0} was added to the exception list. To remove the bot, reply to it with the /delex command.</value>
  </data>
  <data name="AnticheatsDeleted" xml:space="preserve">
    <value>The bot {0} was removed from the exception list.</value>
  </data>
  <data name="AnticheatsOff" xml:space="preserve">
    <value>Anticheats has been disabled.</value>
  </data>
  <data name="AnticheatsOn" xml:space="preserve">
    <value>Anticheats has been enabled. To add bots to the exception list, respond to them with the /addex command.</value>
  </data>
  <data name="Busy" xml:space="preserve">
    <value>SauceNAO is very busy. Please try again later or use the /temp command to get a temporary link to the image and search for the image yourself.</value>
  </data>
  <data name="EmptyRequest" xml:space="preserve">
    <value>You need to reply to an image file (image, GIF or a sticker)</value>
  </data>
  <data name="FailedConvertFile" xml:space="preserve">
    <value>Failed to convert file to a supported file.</value>
  </data>
  <data name="GeneratingTmpUrl" xml:space="preserve">
    <value>Generating temporary link...</value>
  </data>
  <data name="HelpApikey" xml:space="preserve">
    <value>SauceNAObot's daily search limit is constantly exceeded by users. 
Using your personal &lt;b&gt; API Key &lt;/b&gt; will help you perform more reverse searches without having to worry about other users.
To start using your own &lt;b&gt; API Key &lt;/b&gt; use the command /setapikey followed by the key. Ex: _&lt;i&gt;/setapikey APIKEY&lt;/i&gt;</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>Watch your search history.
Use /clean command to delete it.</value>
  </data>
  <data name="InvalidPhoto" xml:space="preserve">
    <value>That doesn't look like a photo file.</value>
  </data>
  <data name="MissingParams" xml:space="preserve">
    <value>You have not specified sufficient parameters to use this function.</value>
  </data>
  <data name="ResultCharacter" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="ResultCharacters" xml:space="preserve">
    <value>Characters</value>
  </data>
  <data name="ResultCreator" xml:space="preserve">
    <value>Creator</value>
  </data>
  <data name="ResultMaterial" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="ResultPart" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="ResultTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ResultYear" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching...</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="TmpUrlDone" xml:space="preserve">
    <value>Done! Check your &lt;a href="{0}"&gt;temp url&lt;/a&gt;</value>
  </data>
  <data name="TooBigFile" xml:space="preserve">
    <value>The search could not be performed. The file size is too large.</value>
  </data>
  <data name="AnticheatsMessage" xml:space="preserve">
    <value>Ups, no cheating, my friend.</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Send me an image file (image, GIF or a sticker) to find its source right now.
&lt;i&gt;If I'm in a group, reply to a image with /sauce or /source&lt;/i&gt;</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>No sauce found. Maybe try &lt;a href="{0}"&gt;Google Reverse Search&lt;/a&gt; or &lt;a href="{1}"&gt;Yandex&lt;/a&gt; instead? or see on &lt;a href="{2}"&gt;SauceNAO website&lt;/a&gt; to see all the results.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="HistoryErased" xml:space="preserve">
    <value>Your history has been erased.</value>
  </data>
  <data name="HistoryDelConfirm" xml:space="preserve">
    <value>Do you want to delete the search history?</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>The operation was cancelled.</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
</root>