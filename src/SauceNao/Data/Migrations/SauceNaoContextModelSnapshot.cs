// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SauceNao.Data;

namespace SauceNao.Data.Migrations
{
    [DbContext(typeof(SauceNaoContext))]
    partial class SauceNaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("SauceNao.Data.Models.AntiCheat", b =>
                {
                    b.Property<int>("AntiCheattd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AddedByUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("AntiCheattd");

                    b.HasIndex("AddedByUserId");

                    b.HasIndex("ChatId");

                    b.ToTable("AntiCheat");
                });

            modelBuilder.Entity("SauceNao.Data.Models.AppChat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InviteLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.ToTable("AppChat");
                });

            modelBuilder.Entity("SauceNao.Data.Models.AppUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Lang")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<bool>("LangForce")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Start")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("SauceNao.Data.Models.SuccessfulSauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileUniqueId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Similarity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValueSql("55");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Urls")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FileUniqueId" }, "UQ_FileUniqueId")
                        .IsUnique();

                    b.ToTable("SuccessfulSauce");
                });

            modelBuilder.Entity("SauceNao.Data.Models.TemporalFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileUniqueId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TemporalFile");
                });

            modelBuilder.Entity("SauceNao.Data.Models.UserSauce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("SauceId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SauceId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSauce");
                });

            modelBuilder.Entity("SauceNao.Data.Models.AntiCheat", b =>
                {
                    b.HasOne("SauceNao.Data.Models.AppUser", "AddedByUser")
                        .WithMany("AntiCheats")
                        .HasForeignKey("AddedByUserId")
                        .IsRequired();

                    b.HasOne("SauceNao.Data.Models.AppChat", "Chat")
                        .WithMany("AntiCheats")
                        .HasForeignKey("ChatId")
                        .IsRequired();

                    b.Navigation("AddedByUser");

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("SauceNao.Data.Models.UserSauce", b =>
                {
                    b.HasOne("SauceNao.Data.Models.SuccessfulSauce", "Sauce")
                        .WithMany("UserSauces")
                        .HasForeignKey("SauceId")
                        .IsRequired();

                    b.HasOne("SauceNao.Data.Models.AppUser", "User")
                        .WithMany("UserSauces")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Sauce");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SauceNao.Data.Models.AppChat", b =>
                {
                    b.Navigation("AntiCheats");
                });

            modelBuilder.Entity("SauceNao.Data.Models.AppUser", b =>
                {
                    b.Navigation("AntiCheats");

                    b.Navigation("UserSauces");
                });

            modelBuilder.Entity("SauceNao.Data.Models.SuccessfulSauce", b =>
                {
                    b.Navigation("UserSauces");
                });
#pragma warning restore 612, 618
        }
    }
}
