<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>This bot provides you with an interface to use &lt;a href="https://saucenao.com/"&gt;SauceNAO&lt;/a&gt;'s reverse image search engine.
Send me an image (image, GIF or a sticker) and I'll try to reverse search using the SauceNAO API.</value>
  </data>
  <data name="Anticheats" xml:space="preserve">
    <value>Use this feature to block the reverse search of images sent by specific bots in your group chats.
To add a bot to AntiCheat list, just type &lt;code&gt;/anticheats add [@ExampleBot] &lt;/code&gt; or reply to the bot with &lt;code&gt;/anticheats add&lt;/code&gt;.
To remove the bot, type &lt;code&gt;/anticheats remove [@ExampleBot]&lt;/code&gt; or reply to the bot with &lt;code&gt;/anticheats remove &lt;/code&gt;.</value>
  </data>
  <data name="AnticheatsAdded" xml:space="preserve">
    <value>The bot {0} was added to the AntiCheats list.</value>
  </data>
  <data name="AnticheatsDeleted" xml:space="preserve">
    <value>The bot {0} was removed from the AntiCheats list.</value>
  </data>
  <data name="AnticheatsMessage" xml:space="preserve">
    <value>Ups, no cheating, my friend.</value>
  </data>
  <data name="Busy" xml:space="preserve">
    <value>SauceNAO is very busy. Please try again later or use the /temp command to get a temporary link to the image and search for the image yourself.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Cancelled" xml:space="preserve">
    <value>The operation was cancelled.</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Creator" xml:space="preserve">
    <value>My creator is &lt;b&gt;Derek Nieves&lt;/b&gt; (@MasterCat7)</value>
  </data>
  <data name="EmptyRequest" xml:space="preserve">
    <value>You need to reply to an image file (image, GIF or a sticker)</value>
  </data>
  <data name="FailedConvertFile" xml:space="preserve">
    <value>Failed to convert file to a supported file.</value>
  </data>
  <data name="GeneratingTmpUrl" xml:space="preserve">
    <value>Generating temporary link...</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Send me an image file (image, GIF or a sticker) to find it's sauce right now. (source)
&lt;i&gt;If I'm in a group, reply to an image with /sauce &lt;/i&gt;.
Forward the media files you have searched along with their sauce via bot. More Info: &lt;code&gt;/help MyHistory&lt;/code&gt;.
Use my Anti-Cheat feature in your groups when playing "Guess the Character". More Info: &lt;code&gt;/help AntiCheats&lt;/code&gt;</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>When you find the sauce for an image, you can forward the image together with the sauce via bot. To do this, just type @{0} at the beginning of a message and select an image from your history.
If you want to delete your search history, type &lt;code&gt;/history clear &lt;/code&gt;. </value>
  </data>
  <data name="HistoryButton" xml:space="preserve">
    <value>View search history</value>
  </data>
  <data name="HistoryErased" xml:space="preserve">
    <value>Your history has been erased.</value>
  </data>
  <data name="InvalidPhoto" xml:space="preserve">
    <value>That doesn't look like a photo file.</value>
  </data>
  <data name="MissingParams" xml:space="preserve">
    <value>You have not specified sufficient parameters to use this function.</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>No sauce found. Maybe try &lt;a href="{0}"&gt;Google Reverse Search&lt;/a&gt; or &lt;a href="{1}"&gt;Yandex&lt;/a&gt; instead? or see on &lt;a href="{2}"&gt;SauceNAO website&lt;/a&gt; to see all the results.</value>
  </data>
  <data name="ResultCharacter" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="ResultCharacters" xml:space="preserve">
    <value>Characters</value>
  </data>
  <data name="ResultCreator" xml:space="preserve">
    <value>Creator</value>
  </data>
  <data name="ResultMaterial" xml:space="preserve">
    <value>Material</value>
  </data>
  <data name="ResultPart" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="ResultTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ResultYear" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Searching" xml:space="preserve">
    <value>Searching...</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="TmpUrlDone" xml:space="preserve">
    <value>Done! Check your &lt;a href="{0}"&gt;temp url&lt;/a&gt;.</value>
  </data>
  <data name="BuyMeACookie" xml:space="preserve">
    <value>If you want, buy me a &lt;a href="https://www.buymeacoffee.com/eptagone"&gt;cookie&lt;/a&gt;!
Donations are used to pay for the app host and the api account the bot uses to find your sauces.
Another way you can help us is by offering translations to expand the languages that this bot supports.</value>
  </data>
  <data name="TooBigFile" xml:space="preserve">
    <value>The search could not be performed. The file size is too large.</value>
  </data>
  <data name="GroupsOnly" xml:space="preserve">
    <value>This command only works in group chats.</value>
  </data>
  <data name="SetLang" xml:space="preserve">
    <value>Use this command to change the reply language in the current chat.
Syntax:
/setlang &lt;language code&gt; [-Force]
/setgrouplang &lt;language code&gt;
The available languages are:
* English (default): en
* Spanish: es
Specify the optional [-Force] parameter to keep your language in any group regardless of the group's language.</value>
  </data>
  <data name="SetLangSaved" xml:space="preserve">
    <value>Your language preferences have been saved.</value>
  </data>
  <data name="NoInfo" xml:space="preserve">
    <value>No information.</value>
  </data>
  <data name="CleanUp" xml:space="preserve">
    <value>&lt;b&gt; Garbage cleanup completed &lt;/b&gt;
{0} Old sauces removed.
{1} Old files deleted.</value>
  </data>
  <data name="BugReports" xml:space="preserve">
    <value>&lt;b&gt;Bug Reports&lt;/b&gt;
{0} Bot exceptions.
{1} Exceptions.
{2} Failed sauces.</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>&lt;b&gt;Usage statistics&lt;/b&gt;
{0} successful searches in the last week.
Used by {1} users.
Used by {2} groups.</value>
  </data>
  <data name="SupportChat" xml:space="preserve">
    <value>Support Chat</value>
  </data>
  <data name="Langs" xml:space="preserve">
    <value>&lt;b&gt;Detected Languages&lt;/b&gt;
{0}</value>
  </data>
</root>